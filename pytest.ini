[tool:pytest]
# Pytest configuration for AI Crypto Trading Bot

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=.
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --html=reports/test_report.html
    --self-contained-html

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    performance: Performance and load tests
    security: Security and vulnerability tests
    slow: Tests that take a long time to run
    api: Tests that require external API access
    simulation: Tests that run in simulation mode
    live: Tests that require live trading (use with caution)
    
# Test timeout (in seconds)
timeout = 300

# Minimum Python version
minversion = 3.8

# Ignore warnings from dependencies
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:google.*
    ignore::UserWarning:pandas.*

# Coverage configuration
[coverage:run]
source = .
omit = 
    */venv/*
    */tests/*
    */__pycache__/*
    */.*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
